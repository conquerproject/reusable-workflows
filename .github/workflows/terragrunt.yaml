name: 'Terragrunt'

on:
  workflow_call:
    inputs:
      terragrunt_default_filter:
        description: "Terragrunt files to filter changes"
        type: string
        required: false
        default: "**/terragrunt.hcl"

    secrets:
      AZURE_CLIENT_ID:
        description: "Client ID of Azure Service Principal"
        required: false
      AZURE_TENANT_ID:
        description: "Azure Entra ID tenant ID"
        required: false
      AZURE_SUBSCRIPTION_ID:
        description: "Azure Subscription ID"
        required: false

env:
  tf_version: '1.7.4'
  tg_version: '0.54.19'

jobs:
  #https://github.com/dorny/paths-filter?tab=readme-ov-file#examples
  changes:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read
      contents: read

    outputs:
      terragrunt_paths: ${{ steps.filter.outputs.terragrunt_files }}
      terragrunt_true: ${{ steps.filter.outputs.terragrunt }}
      terragrunt_paths_del: ${{ steps.filter.outputs.terragrunt_del_files }}
      terragrunt_del: ${{ steps.filter.outputs.terragrunt_del }}

    steps:
      - name: check checkout
        uses: actions/checkout@v4

      - name: check changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          list-files: json
          filters: |
            terragrunt:
              - added|modified: &default_filter "${{ inputs.terragrunt_default_filter }}" 
            terragrunt_del:
              - deleted: *default_filter

  checks:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: "./"
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

  plan:
    runs-on: ubuntu-latest
    needs: [changes, checks]
    if: ${{ needs.changes.outputs.terragrunt_true == 'true' }}
    strategy:
      matrix:
        terragrunt_path: ${{ fromJSON(needs.changes.outputs.terragrunt_paths) }}

    env:
      terragrunt_dir: ${{ matrix.terragrunt_path }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: "true"
 
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terragrunt Work directory
        id: terragrunt_dir
        run: |
          echo "tg_dir=$(dirname "$terragrunt_dir")" >> $GITHUB_OUTPUT

      - name: Running Terragrunt Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ steps.terragrunt_dir.outputs.tg_dir }}
          tg_command: 'plan'
          tg_comment: 1 

  apply:
    runs-on: ubuntu-latest
    needs: [changes, checks]
    if: ${{ github.event.pull_request.merged == true }}
    strategy:
      matrix:
        terragrunt_path: ${{ fromJSON(needs.changes.outputs.terragrunt_paths) }}

    env:
      terragrunt_dir: ${{ matrix.terragrunt_path }}
 
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terragrunt Work directory
        id: terragrunt_dir
        run: |
          echo "tg_dir=$(dirname "$terragrunt_dir")" >> $GITHUB_OUTPUT

      - name: Running Terragrunt Apply
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ steps.terragrunt_dir.outputs.tg_dir }}
          tg_command: 'apply'
          tg_comment: 1
